namespace quantum_random_number_generator { open Microsoft.Quantum.Canon; open Microsoft.Quantum.Intrinsic; open Microsoft.Quantum.Measurement; open Microsoft.Quantum.Math; open Microsoft.Quantum.Convert; operation GenerateRandomBit() : Result { using(q = Qubit()) { H(q); return MResetZ(q); } } operation generate_random_number_in_range(max: Int) : Int { mutable output = 0; repeat { mutable bits = new Result[0]; for(idxBit in 1..BitSizeI(max)) { set bits += [GenerateRandomBit()]; } set output = ResultArrayAsInt(bits); } until(output <= max); return output; } @EntryPoint() operation generate_random_number() : Int { let max = 50000; Message($"A random number between 0 and {max}: "); return generate_random_number_in_range(max); } } 